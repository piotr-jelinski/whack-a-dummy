@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --scene-setup-duration: 1000ms;
  --scene-teardown-duration: 500ms;
  --board-setup-duration: 1000ms;
  --board-teardown-duration: 500ms;

  @media (orientation: landscape) {
    --screen-size: 100svh;
  }

  @media (orientation: portrait) {
    --screen-size: 100svw;
  }
}

* {
  outline: none;
}

html,
body,
#root {
  font-size: calc(var(--screen-size) * 0.015);
  height: 100%;
  margin: 0;
  padding: 0;
  width: 100%;
  overflow: hidden;
  background: radial-gradient(
      circle at center,
      rgba(128, 128, 128, 0.9),
      rgba(0, 0, 0, 0.8)
    ),
    linear-gradient(135deg, rgba(128, 128, 128, 0.6), rgba(64, 64, 64, 0.6)),
    linear-gradient(45deg, rgba(32, 32, 32, 0.7), rgba(16, 16, 16, 0.7));
  background-blend-mode: multiply;
}

.move {
  --translate-x: 0;
  --translate-y: 0;
  --translate-z: 0;
  --rotate-x: 0;
  --rotate-y: 0;
  --rotate-z: 0;
}

.move-left {
  --move-x: calc(var(--screen-size) * -0.2);
  --anim-duration: 1800ms;
  animation: moveX var(--anim-duration) both;
}

.move-right {
  --move-x: calc(var(--screen-size) * 0.2);
  --anim-duration: 2700ms;
  animation: moveX var(--anim-duration) both;
}

@keyframes moveX {
  to {
    transform: translateX(var(--move-x)) translateY(var(--translate-y))
      translateZ(var(--translate-z)) rotateX(var(--rotate-x))
      rotateY(var(--rotate-y)) rotateZ(var(--rotate-z));
  }
}

.move-up {
  --move-y: calc(var(--screen-size) * -0.2);
  --anim-duration: 2800ms;
  animation: moveY var(--anim-duration) both;
}

.move-down {
  --move-y: calc(var(--screen-size) * 0.2);
  --anim-duration: 3000ms;
  animation: moveY var(--anim-duration) both;
}

@keyframes moveY {
  to {
    transform: translateX(var(--translate-x)) translateY(var(--move-y))
      translateZ(var(--translate-z)) rotateX(var(--rotate-x))
      rotateY(var(--rotate-y)) rotateZ(var(--rotate-z));
  }
}

.scene {
  height: calc(var(--screen-size) * 0.8);
  perspective: calc(var(--screen-size) * 2);
  width: calc(var(--screen-size) * 0.8);
}

.scene-animation {
  transform-style: preserve-3d;
}

.scene-on {
  animation: sceneOn var(--scene-setup-duration) both;
}

.scene-off {
  animation: sceneOff var(--scene-teardown-duration) both;
}

@keyframes sceneOn {
  to {
    transform: translateX(calc(var(--screen-size) * -0.18))
      translateY(calc(var(--screen-size) * 0.5))
      translateZ(calc(var(--screen-size) * -0.1)) rotateX(-120deg) rotateY(0)
      rotateZ(-30deg);
  }
}

@keyframes sceneOff {
  to {
    transform: translateX(0) translateY(0) translateZ(0) rotateX(0) rotateY(0)
      rotateZ(0);
  }
}

.cuboid {
  height: 1px;
  position: absolute;
  transform-style: preserve-3d;
  width: 1px;
}

.face {
  --face-size-x: calc(var(--screen-size) * 0.8);
  --face-size-y: calc(var(--screen-size) * 0.8);
  --face-size-z: calc(var(--screen-size) * 0.16);
  display: flex;
  position: absolute;
  transform-style: preserve-3d;
}
.face-front {
  background-color: #a1887f;
  height: var(--face-size-y);
  transform: translateZ(calc(var(--face-size-z) / 2));
  width: var(--face-size-x);
}
.face-back {
  background-color: #a1887f;
  height: var(--face-size-y);
  transform: rotateY(180deg) translateZ(calc(var(--face-size-z) / 2));
  width: var(--face-size-x);
}

.face-left {
  background-color: #81685f;
  height: var(--face-size-y);
  transform: rotateY(-90deg) translateZ(calc(var(--face-size-z) / 2));
  width: var(--face-size-z);
}
.face-right {
  background-color: #81685f;
  height: var(--face-size-y);
  transform: rotateY(90deg)
    translateZ(calc(var(--face-size-x) - calc(var(--face-size-z) / 2)));
  width: var(--face-size-z);
}

.face-top {
  background-color: #91786f;
  height: var(--face-size-z);
  transform: rotateX(90deg) translateZ(calc(var(--face-size-z) / 2));
  width: var(--face-size-x);
}
.face-bottom {
  background-color: #91786f;
  height: var(--face-size-z);
  justify-content: flex-end;
  transform: rotateX(-90deg)
    translateZ(calc(var(--face-size-y) - calc(var(--face-size-z) / 2)));
  width: var(--face-size-x);
}

.board {
  --fields-per-side: 5;
  display: grid;
  grid-template-columns: repeat(var(--fields-per-side), 1fr);
  grid-template-rows: repeat(var(--fields-per-side), 1fr);
  height: 100%;
  padding: 5%;
  transform-style: preserve-3d;
  width: 100%;
}

.hole-animation {
  transform-style: preserve-3d;
}
.hole-setup {
  animation: grow var(--board-setup-duration) both;
}
.hole-teardown {
  animation: shrink var(--board-teardown-duration) both;
}

.hole {
  height: 100%;
  width: 100%;
  transform-style: preserve-3d;
}
.hole-inactive {
  background: none;
  box-shadow: none;
}
.hole-active {
  background: #000;
  border-radius: 50%;
  box-shadow: inset -4px -8px 16px 8px #282838;
  transform: scale(1.2);
}

@keyframes shrink {
  from {
    transform: scale(1);
  }
  to {
    transform: scale(0);
  }
}

@keyframes grow {
  from {
    transform: scale(0);
  }
  to {
    transform: scale(1);
  }
}

.stop {
  color: white;
  font-size: 2rem;
  font-weight: bold;
  transform: rotateX(180deg);
}

.stop-animation {
  transform-style: preserve-3d;
}
.stop-setup {
  animation: slideIn var(--board-setup-duration) both;
}
.stop-teardown {
  animation: slideOut var(--board-teardown-duration) both;
}

@keyframes slideIn {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(calc(var(--screen-size) * 0.4));
  }
}

@keyframes slideOut {
  from {
    transform: translateY(calc(var(--screen-size) * 0.4));
  }
  to {
    transform: translateY(0);
  }
}
